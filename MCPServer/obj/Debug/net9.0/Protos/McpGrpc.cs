// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/mcp.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MCPServer.Protos {
  /// <summary>
  /// Model Context Protocol service definition
  /// </summary>
  public static partial class MCPService
  {
    static readonly string __ServiceName = "mcp.MCPService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.ChatRequest> __Marshaller_mcp_ChatRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.ChatRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.ChatResponse> __Marshaller_mcp_ChatResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.ChatResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.ChatResponseChunk> __Marshaller_mcp_ChatResponseChunk = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.ChatResponseChunk.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.EmbeddingRequest> __Marshaller_mcp_EmbeddingRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.EmbeddingRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.EmbeddingResponse> __Marshaller_mcp_EmbeddingResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.EmbeddingResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.HealthCheckRequest> __Marshaller_mcp_HealthCheckRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.HealthCheckRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::MCPServer.Protos.HealthCheckResponse> __Marshaller_mcp_HealthCheckResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::MCPServer.Protos.HealthCheckResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponse> __Method_Chat = new grpc::Method<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Chat",
        __Marshaller_mcp_ChatRequest,
        __Marshaller_mcp_ChatResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponseChunk> __Method_ChatStream = new grpc::Method<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponseChunk>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ChatStream",
        __Marshaller_mcp_ChatRequest,
        __Marshaller_mcp_ChatResponseChunk);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MCPServer.Protos.EmbeddingRequest, global::MCPServer.Protos.EmbeddingResponse> __Method_GetEmbeddings = new grpc::Method<global::MCPServer.Protos.EmbeddingRequest, global::MCPServer.Protos.EmbeddingResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEmbeddings",
        __Marshaller_mcp_EmbeddingRequest,
        __Marshaller_mcp_EmbeddingResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::MCPServer.Protos.HealthCheckRequest, global::MCPServer.Protos.HealthCheckResponse> __Method_HealthCheck = new grpc::Method<global::MCPServer.Protos.HealthCheckRequest, global::MCPServer.Protos.HealthCheckResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "HealthCheck",
        __Marshaller_mcp_HealthCheckRequest,
        __Marshaller_mcp_HealthCheckResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MCPServer.Protos.McpReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MCPService</summary>
    [grpc::BindServiceMethod(typeof(MCPService), "BindService")]
    public abstract partial class MCPServiceBase
    {
      /// <summary>
      /// Sends a message to the model and gets a response
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MCPServer.Protos.ChatResponse> Chat(global::MCPServer.Protos.ChatRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stream-based chat where the model's response is streamed back
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ChatStream(global::MCPServer.Protos.ChatRequest request, grpc::IServerStreamWriter<global::MCPServer.Protos.ChatResponseChunk> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get embeddings for text
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MCPServer.Protos.EmbeddingResponse> GetEmbeddings(global::MCPServer.Protos.EmbeddingRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Health check for the service
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::MCPServer.Protos.HealthCheckResponse> HealthCheck(global::MCPServer.Protos.HealthCheckRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(MCPServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Chat, serviceImpl.Chat)
          .AddMethod(__Method_ChatStream, serviceImpl.ChatStream)
          .AddMethod(__Method_GetEmbeddings, serviceImpl.GetEmbeddings)
          .AddMethod(__Method_HealthCheck, serviceImpl.HealthCheck).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MCPServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Chat, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponse>(serviceImpl.Chat));
      serviceBinder.AddMethod(__Method_ChatStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::MCPServer.Protos.ChatRequest, global::MCPServer.Protos.ChatResponseChunk>(serviceImpl.ChatStream));
      serviceBinder.AddMethod(__Method_GetEmbeddings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MCPServer.Protos.EmbeddingRequest, global::MCPServer.Protos.EmbeddingResponse>(serviceImpl.GetEmbeddings));
      serviceBinder.AddMethod(__Method_HealthCheck, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::MCPServer.Protos.HealthCheckRequest, global::MCPServer.Protos.HealthCheckResponse>(serviceImpl.HealthCheck));
    }

  }
}
#endregion
